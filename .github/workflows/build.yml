name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs: 
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        system: [24.04, devel]
        platform: [ArmVirtQemu]
        arch: [ARM, AARCH64]
        target: [RELEASE, DEBUG, NOOPT]

    env:
        artifact_fd_path: ${{ format('{0}/QEMU_EFI_{1}_{2}_{3}{4}.fd', github.workspace, matrix.platform, matrix.arch, matrix.target, matrix.system == 'devel' && '_devel' || '') }}

    steps:
    - uses: actions/setup-python@main
      with:
          python-version: 3.12

    - name: 'Prepare to update system to devel'
      if: ${{ matrix.system == 'devel' }}
      run: |
        sudo sed -i 's/noble/devel/g' /etc/apt/sources.list.d/ubuntu.sources
        sudo apt update
        sudo apt-mark hold cloud-init-base

    - name: 'Install software packages'
      run: |
        sudo apt update
        sudo apt full-upgrade
        sudo apt install mono-complete gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu acpica-tools uuid-dev

    - uses: actions/checkout@main
      with: 
          submodules: 'true'

    - name: 'Build ${{ matrix.arch }}'
      env:
        GCC5_ARM_PREFIX: '/usr/bin/arm-linux-gnueabihf-'
        GCC5_AARCH64_PREFIX: '/usr/bin/aarch64-linux-gnu-'
        flags: ${{ format('BLD_*_SECURE_BOOT_ENABLE=1 BLD_*_TPM2_ENABLE=1 BLD_*_NETWORK_IP6_ENABLE=1 BLD_*_NETWORK_HTTP_BOOT_ENABLE=1 {0}', matrix.arch != 'ARM' && 'BLD_*_NETWORK_TLS_ENABLE=1' || '')}}
        fd_path:  ${{ format('{0}/Build/{1}-{2}/{3}_GCC5/FV/QEMU_EFI.fd', github.workspace, matrix.platform, matrix.arch, matrix.target) }}
      run: |
        pip install --upgrade -r pip-requirements.txt
        python BaseTools/Edk2ToolsBuild.py -t GCC5
        stuart_setup -c ArmVirtPkg/PlatformCI/QemuBuild.py -a ${{ matrix.arch }} -t ${{ matrix.target }} TOOL_CHAIN_TAG=GCC5 ${{ env.flags }}
        stuart_update -c ArmVirtPkg/PlatformCI/QemuBuild.py -a ${{ matrix.arch }} -t ${{ matrix.target }} TOOL_CHAIN_TAG=GCC5 ${{ env.flags }}
        stuart_build -c ArmVirtPkg/PlatformCI/QemuBuild.py -a ${{ matrix.arch }} Target=${{ matrix.target }}  TOOL_CHAIN_TAG=GCC5 ${{ env.flags }}
        echo "version=$(date +%Y%m%d)-$(git rev-parse --short HEAD)" > $GITHUB_ENV
        mv $fd_path $artifact_fd_path

    - name: 'Upload artifact'
      uses: actions/upload-artifact@main
      with:
        name: ${{ format('{0} {1} {2} (Ubuntu {3} Build)', matrix.platform, matrix.arch, matrix.target, matrix.system) }}
        path:  ${{ env.artifact_fd_path }}
        compression-level: 9

    - name: 'Upload logs'
      uses: actions/upload-artifact@main
      with:
        name: ${{ format('{0} {1} {2} (Ubuntu {3} Build) logs', matrix.platform, matrix.arch, matrix.target, matrix.system) }}
        path:  ${{ github.workspace }}/Build
        compression-level: 9

    - name: 'Create a Release'
      if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
      uses: ncipollo/release-action@main
      with:
        allowUpdates	: true
        commit: ${{ github.ref_name }}
        tag: 'edk2-${{ env.version }}'
        artifacts: '${{ env.artifact_fd_path }}'
